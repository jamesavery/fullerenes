This is a list of open bugs and similar kinds of misbehaviour.  This is not a list of feature requests or plans.

----------------------

* Need to homogenize layout2d - make sure that it exists whenever it's needed
  ** there appears to be some undefined behaviour with respect to layouts.
apps/hog-to-rspi works in my (lnw) laptop but segfaults on desktop because
there is no layout2d in 'find_outer_face' and the assertion fails.
* .CC1 crashes in fortran - use C++ file writing routine; implement cc1
* Make orientation the same for buckygen-generated fullerenes and spiral-generated.
  tutte_layout randomly chooses orientation.
* some jobs/routines (e474f1c1a5d261; input/CCc28.inp) fail because of missing
  layouts.  either put in some 'ifnot exists layout; create layout' whenever
  layouts are used (in the lib) or use the lib such that it doesn't fail.  I (lnw)
  think the first approach is better, a lib should be written such that it is
  hard to use wrongly.
* minimum empty sphere problem, algorithm fails too often

* Tutte-embedding fails:
** input/RSPInano.failed
** input/RSPInanofailed2.inp

* [FIXED] IsomerDB class can no longer read database text-format, only binary.

* Direct sparse linear solver fails for fulleroid example. Why?

* there is a problem with the c++ std-lib of OSX that causes a segfault as soon as one writes to an ostringstream (but creating the object is ok)

* there is an example where cartesian input leads to a valid but non-canonical spiral, input of that non-canonical spiral returns canonical spiral but claims input had been canonical in the first place
Problem is in Subroutine CoordBuild, problem circumvented for the moment by not stating that spiral in canonical
