link_libraries(fortran_opt fullerenes)
add_executable(file-to-spiral file-to-spiral.cc)
add_executable(file-to-pov file-to-pov.cc)
add_executable(file-to-file file-to-file.cc)
add_executable(file-to-python file-to-python.cc)
add_executable(spiral-to-polyhedron spiral-to-polyhedron.cc)
add_executable(spiral-to-python spiral-to-python.cc)
add_executable(symmetry symmetry.cc)
add_executable(polyhedron-optimize polyhedron-optimize.cc)
add_executable(halma-polyhedron halma-polyhedron.cc)
add_executable(fullerene-polyhedron fullerene-polyhedron.cc)
add_executable(fullerene-isomers-polyhedra fullerene-isomers-polyhedra.cc)
add_executable(polyhedra-buster polyhedra-buster.cc)
add_executable(filter-nanocones filter-nanocones.cc)
add_executable(kegle kegle.cc)
add_executable(forcefield-animation-data forcefield-animation-data.cc)
# add_executable(density density.cc)
# add_executable(rspilist-to-python-and-mol2 rspilist-to-python-and-mol2.cc)
# add_executable(geodesics geodesics.cc)

if(CMAKE_CUDA_COMPILER)
  add_executable(isomerspace-statistics isomerspace-statistics.cc)
  add_executable(sample-isomerspace sample-isomerspace.cc)
  add_executable(isomerspace-optimise isomerspace-optimise.cc)
  target_link_libraries(isomerspace-optimise cuda_lib)
  target_link_libraries(isomerspace-statistics cuda_lib)
  target_link_libraries(sample-isomerspace cuda_lib)
  target_link_libraries(forcefield-animation-data cuda_lib fullerenes)
endif()
